import fs from "node:fs";
import path from "node:path";
import { log } from "../utils/logger.js";

export async function generateReadme(opts: { name?: string; badges?: boolean } = {}) {
  const cwd = process.cwd();
  const pkgPath = path.join(cwd, "package.json");
  const pkg = fs.existsSync(pkgPath) ? JSON.parse(fs.readFileSync(pkgPath, "utf8")) : {};
  const name = opts.name || pkg.name || path.basename(cwd);
  const readmePath = path.join(cwd, "README.md");
  const badges = opts.badges !== false;

  const badgeLines = badges
    ? [
        "[![CI](https://github.com/USER/REPO/actions/workflows/ci.yml/badge.svg)](#)",
        "[![Coverage](https://img.shields.io/badge/coverage-â€”-brightgreen)](#)",
        "[![Deploy](https://img.shields.io/badge/deploy-Railway-purple)](#)",
      ]
    : [];

  const content = `# ${name}\n\n${badgeLines.join(" ")}\n\nGenerated by Peezy.\n`;
  fs.writeFileSync(readmePath, content, "utf8");
  log.ok("README.md generated");
}

export async function generateChangelog() {
  const cwd = process.cwd();
  const changelogPath = path.join(cwd, "CHANGELOG.md");
  if (!fs.existsSync(path.join(cwd, ".git"))) {
    log.warn("No git repository found. Creating a minimal CHANGELOG.md");
    fs.writeFileSync(changelogPath, "# Changelog\n\n- Initial commit\n", "utf8");
    return;
  }
  // Minimal conventional commits style header
  const content = `# Changelog\n\nAll notable changes to this project will be documented in this file.\n`;
  fs.writeFileSync(changelogPath, content, "utf8");
  log.ok("CHANGELOG.md generated");
}
